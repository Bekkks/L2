package main

import (
	"fmt"
)

func main() {
	var s = []string{"1", "2", "3"}
	// s указывает на слайс длиной 3 и вместимостью 3: ["1","2","3"]
	// len=3, cap=3
	modifySlice(s)
	fmt.Println(s)
	// здесь увидим: ["3","2","3"]
	// потому что первый элемент был изменён внутри функции
	// а изменения длины слайса не затронули исходный (копия ссылки!)
}

func modifySlice(i []string) {
	// i — это копия ссылки на тот же массив, что и s
	i[0] = "3"
	// меняем первый элемент (затрагивает и оригинал s!)
	// теперь базовый массив: ["3","2","3"]

	i = append(i, "4")
	// capacity была 3, и мы добавляем 4-й элемент
	// Go создаёт НОВЫЙ массив ["3","2","3","4"]
	// переменная i теперь указывает на новый массив,
	// а s в main остался привязан к старому массиву
	fmt.Println(i)
	// → [3 2 3 4]

	i[1] = "5"
	// меняем второй элемент во "внутреннем" новом массиве
	// i теперь ["3","5","3","4"]
	fmt.Println(i)
	// → [3 5 3 4]

	i = append(i, "6")
	// capacity новой копии была 4, добавляем 5-й элемент
	// создаётся ещё один новый массив ["3","5","3","4","6"]
	fmt.Println(i)
	// → [3 5 3 4 6]
}
