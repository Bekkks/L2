package main

import "fmt"

func test() (x int) { // данная функция возвращает именованное значение
	defer func() { //выполняется в данном случае после return перед фактическим возвращением значения
		x++
	}()
	x = 1  // х = 1
	return //здесь return возвращает саму переменную х а не ее копию как в обыяных функциях по типу return x поэтому
	// изменения в defer влияют на возвращаемое значение
}

func anotherTest() int { // тут уже возвращается просто переменная типа int
	var x int //x = 0
	defer func() {
		x++
		fmt.Println(x) //вывод: 2
	}()
	x = 1
	return x //здесь уже return возвращает копию х которая в данный момент равна 1, а не саму переменную
	//но сама переменная х все же меняет свое значение хоть это и не влияет на возв. значение это можно увидеть при вызову
	//Println(x) в теле defer func
}

func main() {
	fmt.Println(test())        //вывод: 2
	fmt.Println(anotherTest()) //вывод: 1
}
